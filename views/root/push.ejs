<!DOCTYPE html> 
<html>
<head>
  <title>通知送信</title>
  <script type="text/javascript" src="/javascripts/jquery-3.2.1.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
  #noticeButton{
    line-height:100px;
  }

  .button{
    min-width:100px;
    min-height:100px;
    display: inline-block;
    background-color:#999;
    color:#fff;
    text-align:center;
    border-radius:3px;
    box-shadow:0 0 2px #333;
    cursor:pointer;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
  .button:hover{
    box-shadow:0 0 6px #333;
  }
  #history-area{
    margin-top:10px;
    background-color: #eeeeee;
  }
  
  </style>
</head>
<body>
  <h1>通知送信</h1>
  <div id="noticeButton" class="button">通知</div>
  <div id="timelength"></div>
  <div id="history-area">
   

  </div>
  
  <script type="text/javascript">

  //接続先の指定  
  var url = "<%=hostUrl%>";

  //接続
  var socket = io.connect();   
  var lastTimestamp = 0;

  //ボタンクリック時に、メッセージ送信
  $("#noticeButton").click(function(){
    var obj = {
      type:"manual-notice",
      obj : {},
      val : null,
      console:null
    };
    socket.emit("sendToServer",obj);
  });
  $(function(){
    socket.emit("requireObjListOfServer");
  });
  socket.on("sendObjListToClient", function (data) {
    console.log(data);
    for(var i=0; i<addSygfoxDataObj.length; i++){
      addSygfoxDataObj(data[i]);
    }
  });
  socket.on("newSigfoxObjToClient",function (data){
    console.log(data);
    addSygfoxDataObj(data);
  });
  function addSygfoxDataObj(d){
    lastTimestamp = d.time;
    var div = $("<div>");
    div.html(get_date(d.time)+" 水位:"+d.waterlevel+ ", 水温:"+d.watertemp+", 気温:"+d.temp);
    $('#history-area').prepend(div);
  }
  function get_date(_timestamp){
    var _d = _timestamp?new Date(_timestamp * 1000):new Date();
    
    //var Y = _d.getFullYear();
    var m = ("0" + (_d.getMonth() + 1)).slice(-2);
    var d = ("0" + _d.getDate()).slice(-2);
    var H = ("0" + _d.getHours()).slice(-2);
    var i = ("0" + _d.getMinutes()).slice(-2);
    var s = ("0" + _d.getSeconds()).slice(-2);

    return `${m}/${d} ${H}:${i}:${s}`;
  }
  var draw = ()=>{
    $("#timelength").text("経過時間: "+(Math.floor( new Date().getTime() / 1000 )-lastTimestamp));

  }
  (function loop(){
    window.requestAnimationFrame(loop);
    //再描画時の処理
    draw();
  })();
  </script>
</body>

</html>